{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import tarfile\n",
    "import pickle\n",
    "import numpy as np\n",
    "import tensorflow as tf\n",
    "from keras import layers, models\n",
    "from keras.utils import to_categorical\n",
    "\n",
    "def load_cifar10_data(folder):\n",
    "    all_train_images, all_train_labels = [], []\n",
    "\n",
    "    # Load training data from all batches\n",
    "    for batch_num in range(1, 6):\n",
    "        batch_filename = f'{folder}/data_batch_{batch_num}'\n",
    "        with open(batch_filename, 'rb') as fo:\n",
    "            batch = pickle.load(fo, encoding='bytes')\n",
    "            train_images = batch[b'data']\n",
    "            train_labels = np.array(batch[b'labels'])\n",
    "\n",
    "            all_train_images.append(train_images)\n",
    "            all_train_labels.append(train_labels)\n",
    "\n",
    "    # Load test data\n",
    "    with open(f'{folder}/test_batch', 'rb') as fo:\n",
    "        batch = pickle.load(fo, encoding='bytes')\n",
    "        test_images = batch[b'data']\n",
    "        test_labels = np.array(batch[b'labels'])\n",
    "\n",
    "    # Concatenate data from all batches\n",
    "    train_images = np.concatenate(all_train_images, axis=0)\n",
    "    train_labels = np.concatenate(all_train_labels, axis=0)\n",
    "\n",
    "    return (train_images, train_labels), (test_images, test_labels)\n",
    "(train_images, train_labels), (test_images, test_labels) = load_cifar10_data('/kaggle/input/cifar10/cifar-10-batches-py')\n",
    "train_images = train_images.astype('float32') / 255\n",
    "test_images = test_images.astype('float32') / 255\n",
    "train_labels = to_categorical(train_labels)\n",
    "test_labels = to_categorical(test_labels)"
   ]
  }
 ],
 "metadata": {
  "language_info": {
   "name": "python"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
